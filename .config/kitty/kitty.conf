# Colorschemes
include catppuccin.conf


font_family      Operator Mono Ssm Lig Book
bold_font        Operator Mono Ssm Lig Medium
italic_font      Operator Mono Ssm Lig Book Italic
bold_italic_font Operator Mono Ssm Lig Medium Italic
font_size 12

#modify_font       underline_thickness 50%
#modify_font       underline_position 1
#modify_font       strikethrough_position 1
modify_font                     strikethrough_position 125%
modify_font                     strikethrough_thickness 250%
modify_font                     underline_position 150%
modify_font                     underline_thickness 90%
modify_font                     baseline 110%

font_features		        OperatorMonoSSmNerdFontComplete-BookItalic ss03 ss08
font_features		        OperatorMonoSSmNerdFontComplete-BoldItalic ss03 ss08
font_features		        OperatorMonoSSmNerdFontComplete-Book ss03 ss08
font_features		        OperatorMonoSSmNerdFontComplete-Bold ss03 ss08

window_margin_width    0
initial_window_width   755
placement_strategy top-left
background_opacity 0.9
dynamic_background_opacity yes

shell zsh
editor nvim

symbol_map U+E0A0-U+E0A3,U+E0C0-U+E0C7 PowerlineSymbols

disable_ligatures never
confirm_os_window_close 0
tab_bar_style powerline
#cursor                          none
# The cursor shape can be one of (block, beam, underline)
cursor_shape     beam
cursor_stop_blinking_after      10.0
pointer_shape_when_grabbed arrow


#}}}
#--------------------------------------------------------------------------------
# Mouse {{{
#--------------------------------------------------------------------------------
copy_on_select                  yes
scrollback_lines                10000
# The modifiers to use rectangular selection (i.e. to select text in a
# rectangular block with the mouse)
# rectangle_select_modifiers ctrl+alt
mouse_hide_wait                 15
# Set the active window to the window under the mouse when moving the mouse around
focus_follows_mouse             yes
#}}}
#--------------------------------------------------------------------------------
# Audio/visual bell {{{
#--------------------------------------------------------------------------------
enable_audio_bell               no
# Makes the dock icon bounce on macOS or the taskbar flash on linux.
window_alert_on_bell            yes
#}}}
#--------------------------------------------------------------------------------
# Window layout {{{
#--------------------------------------------------------------------------------
remember_window_size            yes
enabled_layouts                 tall:bias=55;full_size=1,stack,fat,grid,horizontal
window_border_width             1.0
window_margin_width             0.0
window_padding_width            0
placement_strategy              top-left
inactive_text_alpha             0.8
# (static,scale,size)
resize_draw_strategy            scale

#}}}
#--------------------------------------------------------------------------------
# Tab bar {{{
#--------------------------------------------------------------------------------
tab_bar_style                   separator
tab_separator                   "    "
tab_title_template              "{sup.index} {fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{title}"
active_tab_title_template       "{sup.index} 働 {fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{title} {fmt.fg._5B6268}{fmt.nobold}({num_windows})"
tab_bar_edge                    top
tab_bar_align                   center
active_tab_font_style           bold-italic
#}}}
#--------------------------------------------------------------------------------
# Advanced {{{
#--------------------------------------------------------------------------------
# The shell program to execute. The default value of . means
# to use whatever shell is set as the default shell for the current user.
# Note that on macOS if you change this, you might need to add --login to
# ensure that the shell starts in interactive mode and reads its startup rc files.
shell                           .
allow_remote_control            yes
listen_on                       unix:/tmp/kitty
#}}}

#--------------------------------------------------------------------------------
# Keyboard shortcuts {{{
#--------------------------------------------------------------------------------
# For a list of key names, see: http://www.glfw.org/docs/latest/group__keys.html
# For a list of modifier names, see: http://www.glfw.org/docs/latest/group__mods.html
kitty_mod                       ctrl+shift
# You can use the special action no_op to unmap a keyboard shortcut that is
# assigned in the default configuration.
#
# You can combine multiple actions to be triggered by a single shortcut, using the
# syntax below:
# map key combine <separator> action1 <separator> action2 <separator> action3 ...
# For example:
# map kitty_mod+e combine : new_window : next_layout
# this will create a new window and switch to the next available layout
#
# You can use multi-key shortcuts using the syntax shown below:
# map key1>key2>key3 action
# For example:
# map ctrl+f>2 set_font_size 20
# this will change the font size to 20 points when you press ctrl+f and then 2

# map cmd+left click to open URLs
mouse_map super+left release grabbed,ungrabbed mouse_handle_click link
#}}}
#--------------------------------------------------------------------------------
# Scrolling {{{
#--------------------------------------------------------------------------------
map kitty_mod+k                 scroll_line_up
map kitty_mod+j                 scroll_line_down
map kitty_mod+d                 scroll_page_up
map kitty_mod+y                 scroll_page_down
map kitty_mod+h                 show_scrollback
#}}}
#--------------------------------------------------------------------------------
# Window management {{{
#--------------------------------------------------------------------------------
# The script is a kitty taken from https://sw.kovidgoyal.net/kitty/kittens/custom.html
map kitty_mod+space             toggle_layout stack
map kitty_mod+enter             new_window
map kitty_mod+q                 close_window

# map ctrl+j                      kitten pass_keys.py neighboring_window bottom ctrl+j
# map ctrl+k                      kitten pass_keys.py neighboring_window top    ctrl+k
# map ctrl+h                      kitten pass_keys.py neighboring_window left   ctrl+h
# map ctrl+l                      kitten pass_keys.py neighboring_window right  ctrl+l

map kitty_mod+;                 detach_window ask
map kitty_mod+]                 next_window
map kitty_mod+[                 previous_window
map kitty_mod+f                 move_window_forward
map kitty_mod+b                 move_window_backward
map kitty_mod+s                 focus_visible_window
map kitty_mod+1                 first_window
map kitty_mod+2                 second_window
map kitty_mod+3                 third_window
map kitty_mod+4                 fourth_window
map kitty_mod+5                 fifth_window
map kitty_mod+6                 sixth_window
map kitty_mod+7                 seventh_window
map kitty_mod+8                 eighth_window
map kitty_mod+9                 ninth_window
map kitty_mod+0                 tenth_window

# You can pass the current selection to the new program by using the @selection placeholder
# map kitty_mod+y      new_window less @selection
#
# You can even send the contents of the current screen + history buffer as stdin using
# the placeholders @text (which is the plain text) and @ansi (which includes text styling escape codes).
# For only the current screen, use @screen or @ansi_screen.
# For example, the following command opens the scrollback buffer in less in a new window.
# map kitty_mod+y      new_window @ansi less +G -R
#
# You can open a new window with the current working directory set to the
# working directory of the current window using
# map ctrl+alt+enter    new_window_with_cwd
#}}}
#-------------------------------------------------------------------------------
# Tab management {{{
#-------------------------------------------------------------------------------
action_alias                    launch_tab launch --type=tab --cwd=current
map kitty_mod+[                       next_tab
map kitty_mod+]                       previous_tab

map kitty_mod+c copy_to_clipboard
map kitty_mod+v  paste_from_clipboard

map kitty_mod+#                 launch zsh -c 'nvim'
map kitty_mod+'                 new_tab

map kitty_mod+x                 close_tab
map kitty_mod+.                 next_layout
map kitty_mod+alt+t             set_tab_title

map kitty_mod+w                       launch --type=overlay --cwd=${HOME}/.config/nvim zsh -c 'nvim'


map kitty_mod+equal             increase_font_size
map kitty_mod+minus             decrease_font_size
map kitty_mod+backspace         restore_font_size
map kitty_mod+e                 run_kitten text hints


map kitty_mod+g kitten hints --type=linenum --linenum-action=tab nvim +{line} +{path}
# Select a path/filename and insert it into the terminal. Useful, for instance to
# run git commands on a filename output from a previous git command.
# map kitty_mod+p>f       run_kitten text hints --type path --program -

# Select a path/filename and open it with the default open program.
# map kitty_mod+p>shift+f run_kitten text hints --type path

# Select a line of text and insert it into the terminal. Use for the
# output of things like: ls -1
# map kitty_mod+p>l       run_kitten text hints --type line --program -

# Select words and insert into terminal.
# map kitty_mod+p>w       run_kitten text hints --type word --program -

# The hints kitten has many more modes of operation that you can map to different
# shortcuts. For a full description run: kitty +kitten hints --help
#}}}
#-------------------------------------------------------------------------------
# Miscellaneous {{{
#-------------------------------------------------------------------------------
map kitty_mod+,                         load_config_file
map kitty_mod+\                         toggle_fullscreen
map kitty_mod+u                         input_unicode_character
map kitty_mod+e>c                       edit_config_file
map kitty_mod+a                         kitty_shell window
#map f1                                  show_kitty_env_vars

confirm_os_window_close                 2
#-----------------------------------------------------------------
draw_minimal_borders                    yes
hide_window_decorations                 titlebar-only

term xterm-kitty
#term xterm-256color

