#! /usr/bin/env bash

remote=origin

set -e
branch=$(git rev-parse --abbrev-ref HEAD)
if [ "$branch" = "HEAD" ]; then
    # check if we are in a rebase
    head_name_file="$(git rev-parse --git-dir)/rebase-merge/head-name"
    if [ -f "${head_name_file}" ]; then
        branch=$(cut -f3- -d/ "$head_name_file")
    else
        # ignore DETACHED HEAD state.
        exit 1
    fi
fi

if remoteBranch=$(git config "branch.${1-$branch}.merge"); then
    remoteBranch=${remoteBranch##refs/heads/}
else
    remoteBranch=$(git remote show $remote | grep 'HEAD branch' | cut -d' ' -f5)
fi

git push $remote "HEAD:refs/for/$remoteBranch"

if hash jerrit 2>/dev/null; then
    jerrit update
fi
